PyBitMessage Advanced Security Scan Report
==================================================
Total issues found: 54

[HIGH] src/openclpow.py:16
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: import pyopencl as cl

[HIGH] src/openclpow.py:18
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: logger.debug("DEBUG: Successfully imported numpy and pyopencl")

[HIGH] src/openclpow.py:99
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: def openclAvailable():

[HIGH] src/openclpow.py:101
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: logger.debug("DEBUG: openclAvailable() called, GPU count: %d", len(gpus))

[HIGH] src/openclpow.py:105
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: def openclEnabled():

[HIGH] src/openclpow.py:107
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: logger.debug("DEBUG: openclEnabled() called, enabled GPU count: %d", len(enabledGpus))

[HIGH] src/openclpow.py:111
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: def do_opencl_pow(hash_, target):

[HIGH] src/openclpow.py:113
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: logger.debug("DEBUG: do_opencl_pow() called with hash: %s, target: %d", hash_, target)

[HIGH] src/bitmessageqt/support.py:24
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: from openclpow import openclEnabled

[HIGH] src/bitmessageqt/support.py:196
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: openclpow = ustr(

[HIGH] src/bitmessageqt/support.py:198
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: ) if openclEnabled() else "None"

[HIGH] src/bitmessageqt/support.py:207
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: frozen, portablemode, cpow, openclpow, locale, socks, upnp,

[HIGH] src/bitmessageqt/settings.py:15
Type: CONFIG_INJECTION
Description: Unsafe usage of config value port: import openclpow

[HIGH] src/bitmessageqt/settings.py:15
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: import openclpow

[HIGH] src/bitmessageqt/settings.py:264
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: opencl_available = openclpow.openclAvailable()

[HIGH] src/bitmessageqt/settings.py:265
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: logger.debug("OpenCL available: %s", opencl_available)

[HIGH] src/bitmessageqt/settings.py:266
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: self.comboBoxOpenCL.setEnabled(opencl_available)

[HIGH] src/bitmessageqt/settings.py:269
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: self.comboBoxOpenCL.addItems(openclpow.vendors)

[HIGH] src/bitmessageqt/settings.py:273
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: 'bitmessagesettings', 'opencl'):

[HIGH] src/bitmessageqt/settings.py:594
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: 'bitmessagesettings', 'opencl')):

[HIGH] src/bitmessageqt/settings.py:597
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: 'bitmessagesettings', 'opencl',

[HIGH] src/bitmessageqt/settings.py:15
Type: CONFIG_INJECTION
Description: Unsafe usage of config value port: import openclpow

[HIGH] src/bitmessageqt/settings.py:15
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: import openclpow

[HIGH] src/bitmessageqt/settings.py:264
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: opencl_available = openclpow.openclAvailable()

[HIGH] src/bitmessageqt/settings.py:265
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: logger.debug("OpenCL available: %s", opencl_available)

[HIGH] src/bitmessageqt/settings.py:266
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: self.comboBoxOpenCL.setEnabled(opencl_available)

[HIGH] src/bitmessageqt/settings.py:269
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: self.comboBoxOpenCL.addItems(openclpow.vendors)

[HIGH] src/bitmessageqt/settings.py:273
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: 'bitmessagesettings', 'opencl'):

[HIGH] src/bitmessageqt/settings.py:594
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: 'bitmessagesettings', 'opencl')):

[HIGH] src/bitmessageqt/settings.py:597
Type: CONFIG_INJECTION
Description: Unsafe usage of config value opencl: 'bitmessagesettings', 'opencl',

[HIGH] src/bitmessageqt/tests/settings.py:50
Type: CONFIG_INJECTION
Description: Unsafe usage of config value font: """A function to get the open font dialog and accept it"""

[HIGH] src/bitmessageqt/tests/settings.py:50
Type: CONFIG_INJECTION
Description: Unsafe usage of config value font: """A function to get the open font dialog and accept it"""

[MEDIUM] src/another.py:10
Type: FILE_TRAVERSAL
Description: File operation with variable: open(filepath, 'r')

[MEDIUM] src/bitmessagecli.py:101
Type: FILE_TRAVERSAL
Description: File operation with variable: open(keysName, 'wb')

[MEDIUM] src/bitmessagecli.py:771
Type: FILE_TRAVERSAL
Description: File operation with variable: open(filePath, 'wb+')

[MEDIUM] src/bitmessagecli.py:845
Type: FILE_TRAVERSAL
Description: File operation with variable: open(filePath, 'rb')

[MEDIUM] src/bitmessagecli.py:121
Type: FILE_TRAVERSAL
Description: File operation with variable: open(keysPath, 'wb')

[MEDIUM] src/bitmessagecli.py:183
Type: FILE_TRAVERSAL
Description: File operation with variable: open(keysPath, 'wb')

[MEDIUM] src/bitmessagecli.py:795
Type: FILE_TRAVERSAL
Description: File operation with variable: open(filePath)

[MEDIUM] src/bitmessagecli.py:448
Type: FILE_TRAVERSAL
Description: File operation with variable: open(keysPath, 'wb')

[MEDIUM] src/openclpow.py:83
Type: FILE_TRAVERSAL
Description: File operation with variable: open(cl_path, 'r')

[MEDIUM] src/namecoin.py:362
Type: FILE_TRAVERSAL
Description: File operation with variable: open(nmcConfig, 'r')

[MEDIUM] src/paths.py:163
Type: FILE_TRAVERSAL
Description: File operation with variable: open(githeadfile, 'rt')

[MEDIUM] src/bmconfigparser.py:179
Type: FILE_TRAVERSAL
Description: File operation with variable: open(fileName, 'w')

[MEDIUM] src/bitmessagekivy/load_kivy_screens_data.py:22
Type: FILE_TRAVERSAL
Description: File operation with variable: open(json_path)

[MEDIUM] src/bitmessagecurses/__init__.py:444
Type: FILE_TRAVERSAL
Description: File operation with variable: open(t, 'a')

[MEDIUM] src/storage/filesystem.py:223
Type: FILE_TRAVERSAL
Description: File operation with variable: open(data_path, 'rb')

[MEDIUM] src/storage/filesystem.py:242
Type: FILE_TRAVERSAL
Description: File operation with variable: open(metadata_path, 'r')

[MEDIUM] src/storage/filesystem.py:102
Type: FILE_TRAVERSAL
Description: File operation with variable: open(metadata_path, 'w')

[MEDIUM] src/storage/filesystem.py:107
Type: FILE_TRAVERSAL
Description: File operation with variable: open(data_path, 'wb')

[MEDIUM] src/tests/core.py:53
Type: FILE_TRAVERSAL
Description: File operation with variable: open(knownnodes_file, 'wb')

[MEDIUM] src/tests/test_process.py:94
Type: FILE_TRAVERSAL
Description: File operation with variable: open(pfile, 'rb')

[MEDIUM] src/tests/mockbm/pybitmessage/bmconfigparser.py:179
Type: FILE_TRAVERSAL
Description: File operation with variable: open(fileName, 'w')

[MEDIUM] src/bitmessageqt/__init__.py:3348
Type: FILE_TRAVERSAL
Description: File operation with variable: open(filename, 'w')

